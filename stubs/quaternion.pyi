import numpy as np
import numpy.typing as npt

class quaternion(np.generic):
    def __init__(self, w: float, i: float, j: float, k: float, /): ...
    def conjugate(self) -> quaternion: ...
    def __mul__(self, other: quaternion) -> quaternion: ...
    @property
    def components(self) -> np.ndarray: ...

one: quaternion

def from_rotation_vector(array: np.ndarray) -> quaternion: ...
def as_rotation_vector(q: quaternion) -> np.ndarray: ...
def as_rotation_matrix(q: quaternion) -> np.ndarray: ...
def as_quat_array(a: np.ndarray) -> npt.NDArray[quaternion]: ...
def from_vector_part(v: npt.NDArray[np.floating]) -> npt.NDArray[quaternion]: ...
